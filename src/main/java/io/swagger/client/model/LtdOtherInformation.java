/*
 * Veriphy API
 * This API provides access to the ID/AML, Company and Lawyer check services provided by Veriphy. This API is secured - please contact us to request test credentials.<br/>The API can send and receive either JSON or XML - please explore the API methods and the return types/parameters below.
 *
 * OpenAPI spec version: v1
 * Contact: support@veriphy.co.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Advisor;
import io.swagger.client.model.Banker;
import io.swagger.client.model.EmployeeInformation;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LtdOtherInformation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-29T17:21:25.566Z")
public class LtdOtherInformation {
  @SerializedName("Bankers")
  private List<Banker> bankers = null;

  @SerializedName("Advisors")
  private List<Advisor> advisors = null;

  @SerializedName("EmployeesInformation")
  private List<EmployeeInformation> employeesInformation = null;

  public LtdOtherInformation bankers(List<Banker> bankers) {
    this.bankers = bankers;
    return this;
  }

  public LtdOtherInformation addBankersItem(Banker bankersItem) {
    if (this.bankers == null) {
      this.bankers = new ArrayList<Banker>();
    }
    this.bankers.add(bankersItem);
    return this;
  }

   /**
   * Get bankers
   * @return bankers
  **/
  @ApiModelProperty(value = "")
  public List<Banker> getBankers() {
    return bankers;
  }

  public void setBankers(List<Banker> bankers) {
    this.bankers = bankers;
  }

  public LtdOtherInformation advisors(List<Advisor> advisors) {
    this.advisors = advisors;
    return this;
  }

  public LtdOtherInformation addAdvisorsItem(Advisor advisorsItem) {
    if (this.advisors == null) {
      this.advisors = new ArrayList<Advisor>();
    }
    this.advisors.add(advisorsItem);
    return this;
  }

   /**
   * Get advisors
   * @return advisors
  **/
  @ApiModelProperty(value = "")
  public List<Advisor> getAdvisors() {
    return advisors;
  }

  public void setAdvisors(List<Advisor> advisors) {
    this.advisors = advisors;
  }

  public LtdOtherInformation employeesInformation(List<EmployeeInformation> employeesInformation) {
    this.employeesInformation = employeesInformation;
    return this;
  }

  public LtdOtherInformation addEmployeesInformationItem(EmployeeInformation employeesInformationItem) {
    if (this.employeesInformation == null) {
      this.employeesInformation = new ArrayList<EmployeeInformation>();
    }
    this.employeesInformation.add(employeesInformationItem);
    return this;
  }

   /**
   * Get employeesInformation
   * @return employeesInformation
  **/
  @ApiModelProperty(value = "")
  public List<EmployeeInformation> getEmployeesInformation() {
    return employeesInformation;
  }

  public void setEmployeesInformation(List<EmployeeInformation> employeesInformation) {
    this.employeesInformation = employeesInformation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LtdOtherInformation ltdOtherInformation = (LtdOtherInformation) o;
    return Objects.equals(this.bankers, ltdOtherInformation.bankers) &&
        Objects.equals(this.advisors, ltdOtherInformation.advisors) &&
        Objects.equals(this.employeesInformation, ltdOtherInformation.employeesInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bankers, advisors, employeesInformation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LtdOtherInformation {\n");
    
    sb.append("    bankers: ").append(toIndentedString(bankers)).append("\n");
    sb.append("    advisors: ").append(toIndentedString(advisors)).append("\n");
    sb.append("    employeesInformation: ").append(toIndentedString(employeesInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

