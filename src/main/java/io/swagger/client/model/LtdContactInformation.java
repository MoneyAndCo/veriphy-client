/*
 * Veriphy API
 * This API provides access to the ID/AML, Company and Lawyer check services provided by Veriphy. This API is secured - please contact us to request test credentials.<br/>The API can send and receive either JSON or XML - please explore the API methods and the return types/parameters below.
 *
 * OpenAPI spec version: v1
 * Contact: support@veriphy.co.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.StreetAddress;
import io.swagger.client.model.StreetAddressWithTelephone;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LtdContactInformation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-29T17:21:25.566Z")
public class LtdContactInformation {
  @SerializedName("MainAddress")
  private StreetAddressWithTelephone mainAddress = null;

  @SerializedName("OtherAddresses")
  private List<StreetAddressWithTelephone> otherAddresses = null;

  @SerializedName("PreviousAddresses")
  private List<StreetAddress> previousAddresses = null;

  @SerializedName("EmailAddresses")
  private List<String> emailAddresses = null;

  @SerializedName("Websites")
  private List<String> websites = null;

  public LtdContactInformation mainAddress(StreetAddressWithTelephone mainAddress) {
    this.mainAddress = mainAddress;
    return this;
  }

   /**
   * Get mainAddress
   * @return mainAddress
  **/
  @ApiModelProperty(value = "")
  public StreetAddressWithTelephone getMainAddress() {
    return mainAddress;
  }

  public void setMainAddress(StreetAddressWithTelephone mainAddress) {
    this.mainAddress = mainAddress;
  }

  public LtdContactInformation otherAddresses(List<StreetAddressWithTelephone> otherAddresses) {
    this.otherAddresses = otherAddresses;
    return this;
  }

  public LtdContactInformation addOtherAddressesItem(StreetAddressWithTelephone otherAddressesItem) {
    if (this.otherAddresses == null) {
      this.otherAddresses = new ArrayList<StreetAddressWithTelephone>();
    }
    this.otherAddresses.add(otherAddressesItem);
    return this;
  }

   /**
   * Get otherAddresses
   * @return otherAddresses
  **/
  @ApiModelProperty(value = "")
  public List<StreetAddressWithTelephone> getOtherAddresses() {
    return otherAddresses;
  }

  public void setOtherAddresses(List<StreetAddressWithTelephone> otherAddresses) {
    this.otherAddresses = otherAddresses;
  }

  public LtdContactInformation previousAddresses(List<StreetAddress> previousAddresses) {
    this.previousAddresses = previousAddresses;
    return this;
  }

  public LtdContactInformation addPreviousAddressesItem(StreetAddress previousAddressesItem) {
    if (this.previousAddresses == null) {
      this.previousAddresses = new ArrayList<StreetAddress>();
    }
    this.previousAddresses.add(previousAddressesItem);
    return this;
  }

   /**
   * Get previousAddresses
   * @return previousAddresses
  **/
  @ApiModelProperty(value = "")
  public List<StreetAddress> getPreviousAddresses() {
    return previousAddresses;
  }

  public void setPreviousAddresses(List<StreetAddress> previousAddresses) {
    this.previousAddresses = previousAddresses;
  }

  public LtdContactInformation emailAddresses(List<String> emailAddresses) {
    this.emailAddresses = emailAddresses;
    return this;
  }

  public LtdContactInformation addEmailAddressesItem(String emailAddressesItem) {
    if (this.emailAddresses == null) {
      this.emailAddresses = new ArrayList<String>();
    }
    this.emailAddresses.add(emailAddressesItem);
    return this;
  }

   /**
   * Get emailAddresses
   * @return emailAddresses
  **/
  @ApiModelProperty(value = "")
  public List<String> getEmailAddresses() {
    return emailAddresses;
  }

  public void setEmailAddresses(List<String> emailAddresses) {
    this.emailAddresses = emailAddresses;
  }

  public LtdContactInformation websites(List<String> websites) {
    this.websites = websites;
    return this;
  }

  public LtdContactInformation addWebsitesItem(String websitesItem) {
    if (this.websites == null) {
      this.websites = new ArrayList<String>();
    }
    this.websites.add(websitesItem);
    return this;
  }

   /**
   * Get websites
   * @return websites
  **/
  @ApiModelProperty(value = "")
  public List<String> getWebsites() {
    return websites;
  }

  public void setWebsites(List<String> websites) {
    this.websites = websites;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LtdContactInformation ltdContactInformation = (LtdContactInformation) o;
    return Objects.equals(this.mainAddress, ltdContactInformation.mainAddress) &&
        Objects.equals(this.otherAddresses, ltdContactInformation.otherAddresses) &&
        Objects.equals(this.previousAddresses, ltdContactInformation.previousAddresses) &&
        Objects.equals(this.emailAddresses, ltdContactInformation.emailAddresses) &&
        Objects.equals(this.websites, ltdContactInformation.websites);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mainAddress, otherAddresses, previousAddresses, emailAddresses, websites);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LtdContactInformation {\n");
    
    sb.append("    mainAddress: ").append(toIndentedString(mainAddress)).append("\n");
    sb.append("    otherAddresses: ").append(toIndentedString(otherAddresses)).append("\n");
    sb.append("    previousAddresses: ").append(toIndentedString(previousAddresses)).append("\n");
    sb.append("    emailAddresses: ").append(toIndentedString(emailAddresses)).append("\n");
    sb.append("    websites: ").append(toIndentedString(websites)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

