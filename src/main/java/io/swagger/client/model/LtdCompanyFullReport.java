/*
 * Veriphy API
 * This API provides access to the ID/AML, Company and Lawyer check services provided by Veriphy. This API is secured - please contact us to request test credentials.<br/>The API can send and receive either JSON or XML - please explore the API methods and the return types/parameters below.
 *
 * OpenAPI spec version: v1
 * Contact: support@veriphy.co.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LtdCompanyFullReportAdditionalInformation;
import io.swagger.client.model.LtdCompanyIdentification;
import io.swagger.client.model.LtdCompanySummary;
import io.swagger.client.model.LtdContactInformation;
import io.swagger.client.model.LtdCreditScore;
import io.swagger.client.model.LtdDirectors;
import io.swagger.client.model.LtdFinancialStatement;
import io.swagger.client.model.LtdGroupStructure;
import io.swagger.client.model.LtdOtherInformation;
import io.swagger.client.model.LtdShareCapitalStructure;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LtdCompanyFullReport
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-29T17:21:25.566Z")
public class LtdCompanyFullReport {
  @SerializedName("CompanySummary")
  private LtdCompanySummary companySummary = null;

  @SerializedName("CompanyIdentification")
  private LtdCompanyIdentification companyIdentification = null;

  @SerializedName("CreditScore")
  private LtdCreditScore creditScore = null;

  @SerializedName("ContactInformation")
  private LtdContactInformation contactInformation = null;

  @SerializedName("ShareCapitalStructure")
  private LtdShareCapitalStructure shareCapitalStructure = null;

  @SerializedName("Directors")
  private LtdDirectors directors = null;

  @SerializedName("OtherInformation")
  private LtdOtherInformation otherInformation = null;

  @SerializedName("GroupStructure")
  private LtdGroupStructure groupStructure = null;

  @SerializedName("FinancialStatements")
  private List<LtdFinancialStatement> financialStatements = null;

  @SerializedName("AdditionalInformation")
  private LtdCompanyFullReportAdditionalInformation additionalInformation = null;

  @SerializedName("CompanyId")
  private String companyId = null;

  @SerializedName("OrderNumber")
  private Long orderNumber = null;

  /**
   * Gets or Sets language
   */
  @JsonAdapter(LanguageEnum.Adapter.class)
  public enum LanguageEnum {
    OM("OM"),
    
    AB("AB"),
    
    AA("AA"),
    
    AF("AF"),
    
    SQ("SQ"),
    
    AM("AM"),
    
    AR("AR"),
    
    HY("HY"),
    
    AS("AS"),
    
    AY("AY"),
    
    AZ("AZ"),
    
    BA("BA"),
    
    EU("EU"),
    
    BN("BN"),
    
    DZ("DZ"),
    
    BH("BH"),
    
    BI("BI"),
    
    BR("BR"),
    
    BG("BG"),
    
    MY("MY"),
    
    BE("BE"),
    
    KM("KM"),
    
    CA("CA"),
    
    ZH("ZH"),
    
    CO("CO"),
    
    HR("HR"),
    
    CS("CS"),
    
    DA("DA"),
    
    NL("NL"),
    
    EN("EN"),
    
    EO("EO"),
    
    ET("ET"),
    
    FO("FO"),
    
    FJ("FJ"),
    
    FI("FI"),
    
    FR("FR"),
    
    FY("FY"),
    
    GL("GL"),
    
    KA("KA"),
    
    DE("DE"),
    
    EL("EL"),
    
    KL("KL"),
    
    GN("GN"),
    
    GU("GU"),
    
    HA("HA"),
    
    HE("HE"),
    
    HI("HI"),
    
    HU("HU"),
    
    IS("IS"),
    
    ID("ID"),
    
    IA("IA"),
    
    IE("IE"),
    
    IK("IK"),
    
    IU("IU"),
    
    GA("GA"),
    
    IT("IT"),
    
    JA("JA"),
    
    JW("JW"),
    
    KN("KN"),
    
    KS("KS"),
    
    KK("KK"),
    
    RW("RW"),
    
    KY("KY"),
    
    RN("RN"),
    
    KO("KO"),
    
    KU("KU"),
    
    LO("LO"),
    
    LA("LA"),
    
    LV("LV"),
    
    LN("LN"),
    
    LT("LT"),
    
    MK("MK"),
    
    MG("MG"),
    
    MS("MS"),
    
    ML("ML"),
    
    MT("MT"),
    
    MI("MI"),
    
    MR("MR"),
    
    MO("MO"),
    
    MN("MN"),
    
    NA("NA"),
    
    NE("NE"),
    
    NO("NO"),
    
    OC("OC"),
    
    OR("OR"),
    
    PS("PS"),
    
    FA("FA"),
    
    PL("PL"),
    
    PT("PT"),
    
    PA("PA"),
    
    QU("QU"),
    
    RM("RM"),
    
    RO("RO"),
    
    RU("RU"),
    
    SM("SM"),
    
    SG("SG"),
    
    SA("SA"),
    
    GD("GD"),
    
    SR("SR"),
    
    SH("SH"),
    
    ST("ST"),
    
    TN("TN"),
    
    SN("SN"),
    
    SD("SD"),
    
    SI("SI"),
    
    SS("SS"),
    
    SK("SK"),
    
    SL("SL"),
    
    SO("SO"),
    
    ES("ES"),
    
    SU("SU"),
    
    SW("SW"),
    
    SV("SV"),
    
    TL("TL"),
    
    TG("TG"),
    
    TA("TA"),
    
    TT("TT"),
    
    TE("TE"),
    
    TH("TH"),
    
    BO("BO"),
    
    TI("TI"),
    
    TO("TO"),
    
    TS("TS"),
    
    TR("TR"),
    
    TK("TK"),
    
    TW("TW"),
    
    UG("UG"),
    
    UK("UK"),
    
    UR("UR"),
    
    UZ("UZ"),
    
    VI("VI"),
    
    VO("VO"),
    
    CY("CY"),
    
    WO("WO"),
    
    XH("XH"),
    
    YI("YI"),
    
    YO("YO"),
    
    ZA("ZA"),
    
    ZU("ZU");

    private String value;

    LanguageEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LanguageEnum fromValue(String text) {
      for (LanguageEnum b : LanguageEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<LanguageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LanguageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LanguageEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return LanguageEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("Language")
  private LanguageEnum language = null;

  /**
   * Gets or Sets reportCurrency
   */
  @JsonAdapter(ReportCurrencyEnum.Adapter.class)
  public enum ReportCurrencyEnum {
    AFA("AFA"),
    
    ALL("ALL"),
    
    DZD("DZD"),
    
    ADF("ADF"),
    
    ADP("ADP"),
    
    AOA("AOA"),
    
    ARA("ARA"),
    
    ARS("ARS"),
    
    AMD("AMD"),
    
    AWG("AWG"),
    
    AUD("AUD"),
    
    AZM("AZM"),
    
    BSD("BSD"),
    
    BHD("BHD"),
    
    BDT("BDT"),
    
    BBD("BBD"),
    
    BYR("BYR"),
    
    BZD("BZD"),
    
    BMD("BMD"),
    
    BTN("BTN"),
    
    BOB("BOB"),
    
    BAM("BAM"),
    
    BWP("BWP"),
    
    BRC("BRC"),
    
    BRL("BRL"),
    
    GBP("GBP"),
    
    BND("BND"),
    
    BGN("BGN"),
    
    BIF("BIF"),
    
    XOF("XOF"),
    
    XAF("XAF"),
    
    KHR("KHR"),
    
    CAD("CAD"),
    
    CVE("CVE"),
    
    KYD("KYD"),
    
    CLP("CLP"),
    
    CNY("CNY"),
    
    COP("COP"),
    
    KMF("KMF"),
    
    CDF("CDF"),
    
    CRC("CRC"),
    
    HRK("HRK"),
    
    CUP("CUP"),
    
    CZK("CZK"),
    
    DKK("DKK"),
    
    DJF("DJF"),
    
    DOP("DOP"),
    
    NLG("NLG"),
    
    EUR("EUR"),
    
    ECS("ECS"),
    
    EGP("EGP"),
    
    SVC("SVC"),
    
    EEK("EEK"),
    
    ETB("ETB"),
    
    FKP("FKP"),
    
    FJD("FJD"),
    
    FRF("FRF"),
    
    GMD("GMD"),
    
    GEL("GEL"),
    
    GHC("GHC"),
    
    GIP("GIP"),
    
    XAU("XAU"),
    
    GTQ("GTQ"),
    
    GNF("GNF"),
    
    GWP("GWP"),
    
    GYD("GYD"),
    
    HTG("HTG"),
    
    HNL("HNL"),
    
    HKD("HKD"),
    
    HUF("HUF"),
    
    ISK("ISK"),
    
    INR("INR"),
    
    IDR("IDR"),
    
    IRR("IRR"),
    
    IQD("IQD"),
    
    ILS("ILS"),
    
    JMD("JMD"),
    
    JPY("JPY"),
    
    JOD("JOD"),
    
    KZT("KZT"),
    
    KES("KES"),
    
    KRW("KRW"),
    
    KWD("KWD"),
    
    KGS("KGS"),
    
    LAK("LAK"),
    
    LVL("LVL"),
    
    LBP("LBP"),
    
    LSL("LSL"),
    
    LRD("LRD"),
    
    LYD("LYD"),
    
    LTL("LTL"),
    
    MOP("MOP"),
    
    MKD("MKD"),
    
    MGF("MGF"),
    
    MWK("MWK"),
    
    MYR("MYR"),
    
    MVR("MVR"),
    
    MTL("MTL"),
    
    MRO("MRO"),
    
    MUR("MUR"),
    
    MXN("MXN"),
    
    MDL("MDL"),
    
    MNT("MNT"),
    
    MAD("MAD"),
    
    MZM("MZM"),
    
    MMK("MMK"),
    
    ANG("ANG"),
    
    NAD("NAD"),
    
    NPR("NPR"),
    
    NZD("NZD"),
    
    NIO("NIO"),
    
    NGN("NGN"),
    
    KPW("KPW"),
    
    NOK("NOK"),
    
    OMR("OMR"),
    
    PKR("PKR"),
    
    XPD("XPD"),
    
    PAB("PAB"),
    
    PGK("PGK"),
    
    PYG("PYG"),
    
    PEN("PEN"),
    
    PHP("PHP"),
    
    XPT("XPT"),
    
    PLN("PLN"),
    
    QAR("QAR"),
    
    RON("RON"),
    
    RUB("RUB"),
    
    RWF("RWF"),
    
    WST("WST"),
    
    STD("STD"),
    
    SAR("SAR"),
    
    RSD("RSD"),
    
    SCR("SCR"),
    
    SLL("SLL"),
    
    XAG("XAG"),
    
    SGD("SGD"),
    
    SKK("SKK"),
    
    SIT("SIT"),
    
    SBD("SBD"),
    
    SOS("SOS"),
    
    ZAR("ZAR"),
    
    LKR("LKR"),
    
    SHP("SHP"),
    
    SDD("SDD"),
    
    SDG("SDG"),
    
    SDP("SDP"),
    
    SRD("SRD"),
    
    SRG("SRG"),
    
    SZL("SZL"),
    
    SEK("SEK"),
    
    CHF("CHF"),
    
    SYP("SYP"),
    
    TWD("TWD"),
    
    TJS("TJS"),
    
    TZS("TZS"),
    
    THB("THB"),
    
    TOP("TOP"),
    
    TTD("TTD"),
    
    TND("TND"),
    
    TRY("TRY"),
    
    TMM("TMM"),
    
    USD("USD"),
    
    UGX("UGX"),
    
    UAG("UAG"),
    
    UAK("UAK"),
    
    AED("AED"),
    
    UYU("UYU"),
    
    UZS("UZS"),
    
    VUV("VUV"),
    
    VEF("VEF"),
    
    VND("VND"),
    
    YUN("YUN"),
    
    ZMK("ZMK"),
    
    ZWD("ZWD");

    private String value;

    ReportCurrencyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ReportCurrencyEnum fromValue(String text) {
      for (ReportCurrencyEnum b : ReportCurrencyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ReportCurrencyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ReportCurrencyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ReportCurrencyEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ReportCurrencyEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("ReportCurrency")
  private ReportCurrencyEnum reportCurrency = null;

  public LtdCompanyFullReport companySummary(LtdCompanySummary companySummary) {
    this.companySummary = companySummary;
    return this;
  }

   /**
   * Get companySummary
   * @return companySummary
  **/
  @ApiModelProperty(value = "")
  public LtdCompanySummary getCompanySummary() {
    return companySummary;
  }

  public void setCompanySummary(LtdCompanySummary companySummary) {
    this.companySummary = companySummary;
  }

  public LtdCompanyFullReport companyIdentification(LtdCompanyIdentification companyIdentification) {
    this.companyIdentification = companyIdentification;
    return this;
  }

   /**
   * Get companyIdentification
   * @return companyIdentification
  **/
  @ApiModelProperty(value = "")
  public LtdCompanyIdentification getCompanyIdentification() {
    return companyIdentification;
  }

  public void setCompanyIdentification(LtdCompanyIdentification companyIdentification) {
    this.companyIdentification = companyIdentification;
  }

  public LtdCompanyFullReport creditScore(LtdCreditScore creditScore) {
    this.creditScore = creditScore;
    return this;
  }

   /**
   * Get creditScore
   * @return creditScore
  **/
  @ApiModelProperty(value = "")
  public LtdCreditScore getCreditScore() {
    return creditScore;
  }

  public void setCreditScore(LtdCreditScore creditScore) {
    this.creditScore = creditScore;
  }

  public LtdCompanyFullReport contactInformation(LtdContactInformation contactInformation) {
    this.contactInformation = contactInformation;
    return this;
  }

   /**
   * Get contactInformation
   * @return contactInformation
  **/
  @ApiModelProperty(value = "")
  public LtdContactInformation getContactInformation() {
    return contactInformation;
  }

  public void setContactInformation(LtdContactInformation contactInformation) {
    this.contactInformation = contactInformation;
  }

  public LtdCompanyFullReport shareCapitalStructure(LtdShareCapitalStructure shareCapitalStructure) {
    this.shareCapitalStructure = shareCapitalStructure;
    return this;
  }

   /**
   * Get shareCapitalStructure
   * @return shareCapitalStructure
  **/
  @ApiModelProperty(value = "")
  public LtdShareCapitalStructure getShareCapitalStructure() {
    return shareCapitalStructure;
  }

  public void setShareCapitalStructure(LtdShareCapitalStructure shareCapitalStructure) {
    this.shareCapitalStructure = shareCapitalStructure;
  }

  public LtdCompanyFullReport directors(LtdDirectors directors) {
    this.directors = directors;
    return this;
  }

   /**
   * Get directors
   * @return directors
  **/
  @ApiModelProperty(value = "")
  public LtdDirectors getDirectors() {
    return directors;
  }

  public void setDirectors(LtdDirectors directors) {
    this.directors = directors;
  }

  public LtdCompanyFullReport otherInformation(LtdOtherInformation otherInformation) {
    this.otherInformation = otherInformation;
    return this;
  }

   /**
   * Get otherInformation
   * @return otherInformation
  **/
  @ApiModelProperty(value = "")
  public LtdOtherInformation getOtherInformation() {
    return otherInformation;
  }

  public void setOtherInformation(LtdOtherInformation otherInformation) {
    this.otherInformation = otherInformation;
  }

  public LtdCompanyFullReport groupStructure(LtdGroupStructure groupStructure) {
    this.groupStructure = groupStructure;
    return this;
  }

   /**
   * Get groupStructure
   * @return groupStructure
  **/
  @ApiModelProperty(value = "")
  public LtdGroupStructure getGroupStructure() {
    return groupStructure;
  }

  public void setGroupStructure(LtdGroupStructure groupStructure) {
    this.groupStructure = groupStructure;
  }

  public LtdCompanyFullReport financialStatements(List<LtdFinancialStatement> financialStatements) {
    this.financialStatements = financialStatements;
    return this;
  }

  public LtdCompanyFullReport addFinancialStatementsItem(LtdFinancialStatement financialStatementsItem) {
    if (this.financialStatements == null) {
      this.financialStatements = new ArrayList<LtdFinancialStatement>();
    }
    this.financialStatements.add(financialStatementsItem);
    return this;
  }

   /**
   * Get financialStatements
   * @return financialStatements
  **/
  @ApiModelProperty(value = "")
  public List<LtdFinancialStatement> getFinancialStatements() {
    return financialStatements;
  }

  public void setFinancialStatements(List<LtdFinancialStatement> financialStatements) {
    this.financialStatements = financialStatements;
  }

  public LtdCompanyFullReport additionalInformation(LtdCompanyFullReportAdditionalInformation additionalInformation) {
    this.additionalInformation = additionalInformation;
    return this;
  }

   /**
   * Get additionalInformation
   * @return additionalInformation
  **/
  @ApiModelProperty(value = "")
  public LtdCompanyFullReportAdditionalInformation getAdditionalInformation() {
    return additionalInformation;
  }

  public void setAdditionalInformation(LtdCompanyFullReportAdditionalInformation additionalInformation) {
    this.additionalInformation = additionalInformation;
  }

  public LtdCompanyFullReport companyId(String companyId) {
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @ApiModelProperty(value = "")
  public String getCompanyId() {
    return companyId;
  }

  public void setCompanyId(String companyId) {
    this.companyId = companyId;
  }

  public LtdCompanyFullReport orderNumber(Long orderNumber) {
    this.orderNumber = orderNumber;
    return this;
  }

   /**
   * Get orderNumber
   * @return orderNumber
  **/
  @ApiModelProperty(value = "")
  public Long getOrderNumber() {
    return orderNumber;
  }

  public void setOrderNumber(Long orderNumber) {
    this.orderNumber = orderNumber;
  }

  public LtdCompanyFullReport language(LanguageEnum language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @ApiModelProperty(value = "")
  public LanguageEnum getLanguage() {
    return language;
  }

  public void setLanguage(LanguageEnum language) {
    this.language = language;
  }

  public LtdCompanyFullReport reportCurrency(ReportCurrencyEnum reportCurrency) {
    this.reportCurrency = reportCurrency;
    return this;
  }

   /**
   * Get reportCurrency
   * @return reportCurrency
  **/
  @ApiModelProperty(value = "")
  public ReportCurrencyEnum getReportCurrency() {
    return reportCurrency;
  }

  public void setReportCurrency(ReportCurrencyEnum reportCurrency) {
    this.reportCurrency = reportCurrency;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LtdCompanyFullReport ltdCompanyFullReport = (LtdCompanyFullReport) o;
    return Objects.equals(this.companySummary, ltdCompanyFullReport.companySummary) &&
        Objects.equals(this.companyIdentification, ltdCompanyFullReport.companyIdentification) &&
        Objects.equals(this.creditScore, ltdCompanyFullReport.creditScore) &&
        Objects.equals(this.contactInformation, ltdCompanyFullReport.contactInformation) &&
        Objects.equals(this.shareCapitalStructure, ltdCompanyFullReport.shareCapitalStructure) &&
        Objects.equals(this.directors, ltdCompanyFullReport.directors) &&
        Objects.equals(this.otherInformation, ltdCompanyFullReport.otherInformation) &&
        Objects.equals(this.groupStructure, ltdCompanyFullReport.groupStructure) &&
        Objects.equals(this.financialStatements, ltdCompanyFullReport.financialStatements) &&
        Objects.equals(this.additionalInformation, ltdCompanyFullReport.additionalInformation) &&
        Objects.equals(this.companyId, ltdCompanyFullReport.companyId) &&
        Objects.equals(this.orderNumber, ltdCompanyFullReport.orderNumber) &&
        Objects.equals(this.language, ltdCompanyFullReport.language) &&
        Objects.equals(this.reportCurrency, ltdCompanyFullReport.reportCurrency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companySummary, companyIdentification, creditScore, contactInformation, shareCapitalStructure, directors, otherInformation, groupStructure, financialStatements, additionalInformation, companyId, orderNumber, language, reportCurrency);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LtdCompanyFullReport {\n");
    
    sb.append("    companySummary: ").append(toIndentedString(companySummary)).append("\n");
    sb.append("    companyIdentification: ").append(toIndentedString(companyIdentification)).append("\n");
    sb.append("    creditScore: ").append(toIndentedString(creditScore)).append("\n");
    sb.append("    contactInformation: ").append(toIndentedString(contactInformation)).append("\n");
    sb.append("    shareCapitalStructure: ").append(toIndentedString(shareCapitalStructure)).append("\n");
    sb.append("    directors: ").append(toIndentedString(directors)).append("\n");
    sb.append("    otherInformation: ").append(toIndentedString(otherInformation)).append("\n");
    sb.append("    groupStructure: ").append(toIndentedString(groupStructure)).append("\n");
    sb.append("    financialStatements: ").append(toIndentedString(financialStatements)).append("\n");
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    reportCurrency: ").append(toIndentedString(reportCurrency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

