/*
 * Veriphy API
 * This API provides access to the ID/AML, Company and Lawyer check services provided by Veriphy. This API is secured - please contact us to request test credentials.<br/>The API can send and receive either JSON or XML - please explore the API methods and the return types/parameters below.
 *
 * OpenAPI spec version: v1
 * Contact: support@veriphy.co.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.FinancialValueString;
import io.swagger.client.model.RangeDescribedValueString;
import java.io.IOException;

/**
 * CreditRating
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-29T17:21:25.566Z")
public class CreditRating {
  /**
   * Gets or Sets commonValue
   */
  @JsonAdapter(CommonValueEnum.Adapter.class)
  public enum CommonValueEnum {
    A("A"),
    
    B("B"),
    
    C("C"),
    
    D("D"),
    
    E("E");

    private String value;

    CommonValueEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CommonValueEnum fromValue(String text) {
      for (CommonValueEnum b : CommonValueEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CommonValueEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CommonValueEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CommonValueEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CommonValueEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("CommonValue")
  private CommonValueEnum commonValue = null;

  @SerializedName("CommonValueSpecified")
  private Boolean commonValueSpecified = null;

  @SerializedName("CommonDescription")
  private String commonDescription = null;

  @SerializedName("CreditLimit")
  private FinancialValueString creditLimit = null;

  @SerializedName("ProviderValue")
  private RangeDescribedValueString providerValue = null;

  @SerializedName("ProviderDescription")
  private String providerDescription = null;

  public CreditRating commonValue(CommonValueEnum commonValue) {
    this.commonValue = commonValue;
    return this;
  }

   /**
   * Get commonValue
   * @return commonValue
  **/
  @ApiModelProperty(value = "")
  public CommonValueEnum getCommonValue() {
    return commonValue;
  }

  public void setCommonValue(CommonValueEnum commonValue) {
    this.commonValue = commonValue;
  }

  public CreditRating commonValueSpecified(Boolean commonValueSpecified) {
    this.commonValueSpecified = commonValueSpecified;
    return this;
  }

   /**
   * Get commonValueSpecified
   * @return commonValueSpecified
  **/
  @ApiModelProperty(value = "")
  public Boolean getCommonValueSpecified() {
    return commonValueSpecified;
  }

  public void setCommonValueSpecified(Boolean commonValueSpecified) {
    this.commonValueSpecified = commonValueSpecified;
  }

  public CreditRating commonDescription(String commonDescription) {
    this.commonDescription = commonDescription;
    return this;
  }

   /**
   * Get commonDescription
   * @return commonDescription
  **/
  @ApiModelProperty(value = "")
  public String getCommonDescription() {
    return commonDescription;
  }

  public void setCommonDescription(String commonDescription) {
    this.commonDescription = commonDescription;
  }

  public CreditRating creditLimit(FinancialValueString creditLimit) {
    this.creditLimit = creditLimit;
    return this;
  }

   /**
   * Get creditLimit
   * @return creditLimit
  **/
  @ApiModelProperty(value = "")
  public FinancialValueString getCreditLimit() {
    return creditLimit;
  }

  public void setCreditLimit(FinancialValueString creditLimit) {
    this.creditLimit = creditLimit;
  }

  public CreditRating providerValue(RangeDescribedValueString providerValue) {
    this.providerValue = providerValue;
    return this;
  }

   /**
   * Get providerValue
   * @return providerValue
  **/
  @ApiModelProperty(value = "")
  public RangeDescribedValueString getProviderValue() {
    return providerValue;
  }

  public void setProviderValue(RangeDescribedValueString providerValue) {
    this.providerValue = providerValue;
  }

  public CreditRating providerDescription(String providerDescription) {
    this.providerDescription = providerDescription;
    return this;
  }

   /**
   * Get providerDescription
   * @return providerDescription
  **/
  @ApiModelProperty(value = "")
  public String getProviderDescription() {
    return providerDescription;
  }

  public void setProviderDescription(String providerDescription) {
    this.providerDescription = providerDescription;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreditRating creditRating = (CreditRating) o;
    return Objects.equals(this.commonValue, creditRating.commonValue) &&
        Objects.equals(this.commonValueSpecified, creditRating.commonValueSpecified) &&
        Objects.equals(this.commonDescription, creditRating.commonDescription) &&
        Objects.equals(this.creditLimit, creditRating.creditLimit) &&
        Objects.equals(this.providerValue, creditRating.providerValue) &&
        Objects.equals(this.providerDescription, creditRating.providerDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commonValue, commonValueSpecified, commonDescription, creditLimit, providerValue, providerDescription);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreditRating {\n");
    
    sb.append("    commonValue: ").append(toIndentedString(commonValue)).append("\n");
    sb.append("    commonValueSpecified: ").append(toIndentedString(commonValueSpecified)).append("\n");
    sb.append("    commonDescription: ").append(toIndentedString(commonDescription)).append("\n");
    sb.append("    creditLimit: ").append(toIndentedString(creditLimit)).append("\n");
    sb.append("    providerValue: ").append(toIndentedString(providerValue)).append("\n");
    sb.append("    providerDescription: ").append(toIndentedString(providerDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

